<?php
/**
 * This file is part of the <name> project.
 *
 * (c) <yourname> <youremail>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Application\Sonata\PageBundle\Entity;

use Sonata\PageBundle\Entity\BaseBlock;
use Sonata\BlockBundle\Model\BlockInterface;
/**
 * This file has been generated by the Sonata EasyExtends bundle ( http://sonata-project.org/easy-extends )
 *
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 *
 * @author <yourname> <youremail>
 */
class Block extends BaseBlock
{
    /**
     * @var integer $id
     */
    protected $id;

    /**
     * Get id
     *
     * @return integer $id
     */
    public function getId()
    {
        return $this->id;
    }

    public function __toString()
    {
        return sprintf('%s (%d)', $this->getNamespace(), $this->getId());
    }


    /**
     * {@inheritDoc}
     */
    public function getFullName()
    {
        if($this->getParent() instanceof self)
            $parentName = $this->getParent()->getFullName() . '/';

        if(! $name = $this->getName())
        {
            $name = str_replace('sonata.block.', '', parent::getType());
        }

        return $parentName . $name;
    }

    /**
     * {@inheritDoc}
     */
    public function getNamespace()
    {
        return $this->getPage()->getName() . " :: " . $this->getFullName();
    }
    


    
    public function setId($id)
    {
        parent::setId($id);

        return $this;
    }

    public function setName($name)
    {
        parent::setName($name);

        return $this;
    }

    public function setType($type)
    {
        parent::setType($type);

        return $this;
    }

    public function setSettings(array $settings = array())
    {
        parent::setSettings($settings);

        return $this;
    }

    public function setSetting($name, $value)
    {
        parent::setSetting($name, $value);

        return $this;
    }

    public function setEnabled($enabled)
    {
        parent::setEnabled($enabled);

        return $this;
    }

    public function setPosition($position)
    {
        parent::setPosition($position);

        return $this;
    }

    public function setCreatedAt(\DateTime $createdAt = null)
    {
        parent::setCreatedAt($createdAt);

        return $this;
    }

    public function setUpdatedAt(\DateTime $updatedAt = null)
    {
        parent::setUpdatedAt($updatedAt);

        return $this;
    }
    
    public function addChildren(BlockInterface $child)
    {
        parent::addChildren($child);

        return $this;
    }

    public function setParent(BlockInterface $parent = null)
    {
        parent::setParent($parent);

        return $this;
    }
}